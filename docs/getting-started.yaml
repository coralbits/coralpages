# Getting Started with Coralbits Page Editor

title: "Getting Started"
template: "page://_default"

data:
  - type: header
    data:
      text: "Getting Started"
    style:
      background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)"
      color: white
      font-size: 28px
      font-weight: bold
      text-align: center
      padding: 25px
      margin: 0
      border-radius: 0
  - type: markdown
    data:
      title: "Quick Start Guide"
      text: |
        ## Installation

        The Coralbits Page Editor is a Python-based application. To get started:

        ```bash
        # Clone the repository
        git clone <repository-url>
        cd page_editor

        # Install dependencies using uv (recommended)
        uv sync

        # Or using pip
        pip install -r requirements.txt
        ```

        ## Running the Server

        ### Development Mode
        ```bash
        # Start the development server
        python serve.py

        # Or using the run script
        ./run.sh
        ```

        ### Production Mode
        ```bash
        # Using Docker
        docker build -t coralbits-page-editor .
        docker run -p 8000:8000 coralbits-page-editor
        ```

        ## Your First Page

        Create a simple page by creating a YAML file:

        ```yaml
        data:
          - type: header
            data:
              text: "Hello World"
            style:
              background: blue
              color: white
              text-align: center
              padding: 20px
          
          - type: text
            data:
              text: "Welcome to Coralbits Page Editor!"
            style:
              padding: 20px
              font-size: 18px
        ```

        ## Basic Concepts

        ### Components
        Pages are built using components. Each component has:
        - **Type**: The component type (header, text, image, etc.)
        - **Data**: The content and configuration
        - **Style**: CSS styling properties
        - **Children**: Nested components (optional)

        ### Page Structure
        Pages are defined in YAML format with a hierarchical structure:

        ```yaml
        data:
          - type: section
            data:
              title: "Main Content"
            style:
              max-width: 1200px
              margin: 0 auto
            children:
              - type: text
                data:
                  text: "Content goes here"
        ```

        ## Next Steps

        - Explore the [Components](./components) documentation
        - Learn about [Local Development](./local-development)
        - Check out [Examples](./examples) for inspiration
        - Read about the [Architecture](./architecture) for deeper understanding
    style:
      max-width: 1200px
      margin: 0 auto
      padding: 40px 20px
      line-height: 1.6
      color: #333
